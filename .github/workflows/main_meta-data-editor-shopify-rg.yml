# This workflow builds the Node.js app, runs migrations, and deploys the code to Azure.

name: Build and Deploy Node.js App to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checks out your repository's code
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      # 2. Sets up the correct Node.js version
      - name: 'Set up Node.js version'
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3. Installs all dependencies from package-lock.json
      - name: 'Install All Dependencies'
        run: npm ci

      # 4. Builds the application and generates the Prisma client
      - name: 'Build the Application'
        run: npm run build # This command now includes 'prisma generate'
        env:
          # This build step needs the DATABASE_URL to generate Prisma Client correctly
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # 5. Removes development-only packages to keep the deployment small
      - name: 'Prune Dev Dependencies'
        run: npm prune --production

      # 6. Logs in to Azure using the secret created by the Deployment Center
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 7. Runs database migrations against your production database
      - name: 'Run Database Migrations'
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # 8. Deploys the application code to your App Service
      # 8. Deploys the application code to your App Service
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'meta-data-editor-shopify-rg'
          username: ${{ secrets.AZURE_WEBAPP_USERNAME }}
          password: ${{ secrets.AZURE_WEBAPP_PASSWORD }}
          package: .
